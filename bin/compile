#!/usr/bin/env bash

BUILD_DIR=$1
CACHE_DIR=$2
ENV_FILE=$3

GEOIP_VERSION="1.6.6"

VENDORED_GEOIP="vendor/geoip/$GEOIP_VERSION"
APP_GEOIP="/app/$VENDORED_GEOIP"

# Maxmind GeoIP database

GEOLITECITY_URL="http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz"
GEOLITECITY_FILE="GeoLite2-City.mmdb"
GEOIP_DIST_URL="https://github.com/maxmind/geoip-api-c/releases/download/v$GEOIP_VERSION/GeoIP-$GEOIP_VERSION.tar.gz"

# GEOIP_DIST_URL="https://github.com/maxmind/geoip-api-c/releases/download/v$GEOIP_VERSION/GeoIP-$GEOIP_VERSION.tar.gz"
GEOIP_DIST_DIR="GeoIP-$GEOIP_VERSION"

#echo "-----> Installing Maxmind GeoIP C Library $GEOIP_VERSION"
if [ ! -d "$CACHE_DIR/.geoip" ]; then
    mkdir -p $CACHE_DIR/.geoip
fi

mkdir -p $CACHE_DIR/.geoip

cd $CACHE_DIR/.geoip

curl -s -L -o geoip.tar.gz $GEOIP_DIST_URL
tar -zxvf geoip.tar.gz > /dev/null
cd $GEOIP_DIST_DIR
./configure --prefix="$APP_GEOIP" > /dev/null
make install --prefix="$BUILD_DIR/$VENDORED_GEOIP" > /dev/null

if [ ! -f $GEOLITECITY_FILE ]; then
    echo "     Downloading  $GEOLITECITY_FILE"

    curl -s -L -o ${GEOLITECITY_FILE}.gz $GEOLITECITY_URL
    gunzip ${GEOLITECITY_FILE}.gz > /dev/null
else
  echo "      $GEOLITECITY_FILE already cached"

fi
mkdir -p "$BUILD_DIR/$VENDORED_GEOIP/share/"
cp $GEOLITECITY_FILE "$BUILD_DIR/$VENDORED_GEOIP/share/$GEOLITECITY_FILE"
GEOIP_DB_PATH="$APP_GEOIP/share/$GEOLITECITY_FILE"

# populate profile.d
PROFILE_PATH="$BUILD_DIR/.profile.d/geo.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo "       export GEOIP_DB_PATH=\"$GEOIP_DB_PATH\"" >> $PROFILE_PATH
echo "       GeoIP City Database is available via env in \$GEOIP_DB_PATH = $GEOIP_DB_PATH"
